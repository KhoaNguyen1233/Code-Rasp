/*****
 
 All the resources for this project:
 https://randomnerdtutorials.com/
 
*****/

// Loading the ESP8266WiFi library and the PubSubClient library
#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// Change the credentials below, so your ESP8266 connects to your router
const char* ssid = "MinhHao";
const char* password = "hanhphuc41";

// Change the variable to your Raspberry Pi IP address, so it connects to your MQTT broker
const char* mqtt_server = "192.168.1.123";


// Initializes the espClient
WiFiClient espClient;
PubSubClient client(espClient);

// Connect an LED to each GPIO of your ESP8266
const int GPIO14 = 14;


// Don't change the function below. This functions connects your ESP8266 to your router
void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("WiFi connected - ESP IP address: ");
  Serial.println(WiFi.localIP());
}

// This functions is executed when some device publishes a message to a topic that your ESP8266 is subscribed to
// Change the function below to add logic to your program, so when a device publishes a message to a topic that 
// your ESP8266 is subscribed you can actually do something
void callback(String topic, byte* message, unsigned int length) {
  Serial.print("Message arrived on topic: ");
  Serial.print(topic);
  Serial.print(". Message: ");
  String messageTemp;
  for (int i = 0; i < length; i++) {
    Serial.print((char)message[i]);
    messageTemp += (char)message[i];
  }
  Serial.println();

  // Feel free to add more if statements to control more GPIOs with MQTT

  // If a message is received on the topic home/office/esp1/gpio2, you check if the message is either 1 or 0. Turns the ESP GPIO according to the message
  if (topic == "Fan") {
      int a = messageTemp.toInt();
      Serial.println("Control Fan Speed");
      Serial.println(messageTemp);
      Serial.println(a);
      while (a != 0) {
        if (a > 20) {
          digitalWrite(GPIO14,HIGH);
          delay(a);
          digitalWrite(GPIO14,LOW);
          delay(40);
          client.loop();
        }
        else {
          digitalWrite(GPIO14, LOW);
          client.loop();
        }
      }
  }
  if (topic == "esp8266/3"){
     Serial.println("Mode 1");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       while(a!=10){
        if(a ==1){
        digitalWrite(GPIO14,HIGH);
          delay(100);
          digitalWrite(GPIO14,LOW);
          delay(50);
          client.loop();}
        else if(a==0){
          digitalWrite(GPIO14,HIGH);
          delay(150);
          digitalWrite(GPIO14,LOW);
          delay(125);
          client.loop();
          }
          
       }
     
  }
   
  if (topic == "esp8266/4"){
     Serial.println("Mode 2");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       while(a!=10){
        if(a ==1){
        digitalWrite(GPIO14,HIGH);
          delay(1000);
          digitalWrite(GPIO14,LOW);
          delay(500);
          client.loop();}
          else if(a==0){
             digitalWrite(GPIO14,HIGH);
          delay(150);
          digitalWrite(GPIO14,LOW);
          delay(140);
          client.loop();}
         
       }
     
  }
   
  if (topic == "esp8266/5"){
     Serial.println("Mode 3");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       while(a!=10){
        if(a ==1){
        digitalWrite(GPIO14,HIGH);
          delay(200);
          digitalWrite(GPIO14,LOW);
          delay(500);
          client.loop();}
          else if(a==0){
             digitalWrite(GPIO14,HIGH);
          delay(150);
          digitalWrite(GPIO14,LOW);
          delay(190);
          client.loop();}
         
       }
     
  }
  if (topic == "esp8266/6"){
     Serial.println("Mode 4");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       while(a!=10){
        if(a ==1){
        digitalWrite(GPIO14,HIGH);
          delay(200);
          digitalWrite(GPIO14,LOW);
          delay(50);
          client.loop();}
          else if(a==0){
             digitalWrite(GPIO14,HIGH);
          delay(150);
          digitalWrite(GPIO14,LOW);
          delay(20);
          client.loop();}
          
       }
     
  }
   if (topic == "esp8266/7"){
     Serial.print("Fan 2 mode 1: ");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       client.loop();
     
  }
   
  if (topic == "esp8266/8"){
     Serial.print("Fan 2 mode 2: ");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       client.loop();
     
  }
   
  if (topic == "esp8266/9"){
     Serial.print("Fan 2 mode 3: ");
      int a = messageTemp.toInt();
       Serial.println(messageTemp);
       client.loop();
     
  }
  if (topic == "esp8266/10"){
     Serial.print("Fan 2 mode 4: ");
      int a = messageTemp.toInt();
      Serial.println(messageTemp);
      client.loop();
     
  }
   if (topic == "Fan2"){
     Serial.print("Fan 2: ");
      int a = messageTemp.toInt();
      Serial.println(messageTemp);
      client.loop();
  Serial.println();
}
}

// This functions reconnects your ESP8266 to your MQTT broker
// Change the function below if you want to subscribe to more topics with your ESP8266 
void reconnect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Attempt to connect
     /*
     YOU  NEED TO CHANGE THIS NEXT LINE, IF YOU'RE HAVING PROBLEMS WITH MQTT MULTIPLE CONNECTIONS
     To change the ESP device ID, you will have to give a unique name to the ESP8266.
     Here's how it looks like now:
       if (client.connect("ESP8266Client")) {
     If you want more devices connected to the MQTT broker, you can do it like this:
       if (client.connect("ESPOffice")) {
     Then, for the other ESP:
       if (client.connect("ESPGarage")) {
      That should solve your MQTT multiple connections problem

     THE SECTION IN loop() function should match your device name
    */
    if (client.connect("ESP8266Client")) {
      Serial.println("connected");  
      // Subscribe or resubscribe to a topic
      // You can subscribe to more topics (to control more LEDs in this example)
      client.subscribe("Fan");
      client.subscribe("Light");
      client.subscribe("esp8266/3");
      client.subscribe("esp8266/4");
      client.subscribe("esp8266/5");
      client.subscribe("esp8266/6");
      client.subscribe("Fan2");
      client.subscribe("esp8266/7");
      client.subscribe("esp8266/8");
      client.subscribe("esp8266/9");
      client.subscribe("esp8266/10");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

// The setup function sets your ESP GPIOs to Outputs, starts the serial communication at a baud rate of 115200
// Sets your mqtt broker and sets the callback function
// The callback function is what receives messages and actually controls the LEDs
void setup() {
  pinMode(GPIO14, OUTPUT);
 
  
  Serial.begin(9600);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

// For this project, you don't need to change anything in the loop function. 
// Basically it ensures that you ESP is connected to your broker
void loop() {
  if (!client.connected()) {
    reconnect();
  }
  if(!client.loop())
     /*
     YOU  NEED TO CHANGE THIS NEXT LINE, IF YOU'RE HAVING PROBLEMS WITH MQTT MULTIPLE CONNECTIONS
     To change the ESP device ID, you will have to give a unique name to the ESP8266.
     Here's how it looks like now:
       client.connect("ESP8266Client");
     If you want more devices connected to the MQTT broker, you can do it like this:
       client.connect("ESPOffice");
     Then, for the other ESP:
       client.connect("ESPGarage");
      That should solve your MQTT multiple connections problem

     THE SECTION IN recionnect() function should match your device name
    */
    client.connect("ESP8266Client");
}