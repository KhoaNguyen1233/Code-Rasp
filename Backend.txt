#
# Created by Rui Santos
# Complete project details: https://randomnerdtutorials.com
#

import paho.mqtt.client as mqtt
from flask import Flask, render_template, request
import os
app = Flask(__name__)

picFolder = os.path.join('static','pic')
app.config['UPLOAD_FOLDER'] = picFolder


# Create a dictionary called pins to store the pin number, name, and pin state:
pins = {
   1 : {'name' : 'Mode 1', 'board' : 'esp8266', 'topic' : 'esp8266/3', 'state' : 'False'},
   2 : {'name' : 'Mode 2', 'board' : 'esp8266', 'topic' : 'esp8266/4', 'state' : 'False'},
   3 : {'name' : 'Mode 3', 'board' : 'esp8266', 'topic' : 'esp8266/5', 'state' : 'False'},
   4 : {'name' : 'Mode 4', 'board' : 'esp8266', 'topic' : 'esp8266/6', 'state' : 'False'},
   5 : {'name' : 'Mode 1', 'board' : 'esp8266', 'topic' : 'esp8266/7', 'state' : 'False'},
   6 : {'name' : 'Mode 2', 'board' : 'esp8266', 'topic' : 'esp8266/8', 'state' : 'False'},
   7 : {'name' : 'Mode 3', 'board' : 'esp8266', 'topic' : 'esp8266/9', 'state' : 'False'},
   8 : {'name' : 'Mode 4', 'board' : 'esp8266', 'topic' : 'esp8266/10', 'state' : 'False'}
   }
global slider1 
global slider2 
# Put the pin dictionary into the template data dictionary:
slider1 = 0
slider2 = 5

templateData = {
    'pins' : pins,
    'slider1': slider1,
    'slider2': slider2
    
}

@app.route("/")
def main():
   
   # Pass the template data into the template main.html and return it to the user
   return render_template('main.html', **templateData)

# The function below is executed when someone requests a URL with the pin number and action in it:
@app.route("/<board>/<changePin>/<action>", methods=['POST'])
def action(board, changePin, action):
   global slider1 
   global slider2
   global pic
   
   # Convert the pin from the URL into an integer:
   changePin = int(changePin)
   # Get the device name for the pin being changed:
   devicePin = pins[changePin]['name']
   # If the action part of the URL is "on," execute the code indented below:
   if action == "1" and board == 'esp8266_1':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'
      
   if action == "0" and board == 'esp8266_1':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'

   if action == "1" and board == 'esp8266_2':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_2':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'

   if action == "1" and board == 'esp8266_3':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_3':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'

   if action == "1" and board == 'esp8266_4':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_4':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'
      
   if action == "1" and board == 'esp8266_5':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_5':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'
      
   

   if action == "1" and board == 'esp8266_6':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_6':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'

   if action == "1" and board == 'esp8266_7':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_7':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'

   if action == "1" and board == 'esp8266_8':
      mqttc.publish(pins[changePin]['topic'],"1")
      pins[changePin]['state'] = 'True'

   if action == "0" and board == 'esp8266_8':
      mqttc.publish(pins[changePin]['topic'],"0")
      pins[changePin]['state'] = 'False'
      
   if action == "fanspeed":
       slider1 = int(request.form['slider1']) if request.form['slider1'] else 5
       mqttc.publish("Fan",str(slider1))
   if action == "fan2":
       slider2 = request.form["slider2"] if request.form['slider2'] else 5
       mqttc.publish("Fan2",str(slider2))
   # Along with the pin p8266_2/3/fansdictionary, put the message into the template data dictionary:
   pic = os.path.join(app.config['UPLOAD_FOLDER'],'pic.jpg')
   templateData = {
    'pins' : pins,
    'slider1': slider1,
    'slider2': slider2
    
   }
   return render_template('main.html', **templateData)
@app.route("/fanspeed", methods=["POST"])
def fanspeed():
    
    global slider1
    global slider2
    slider1 = request.form["slider1"]
    mqttc.publish("Fan",str(slider1))
    
    templateData = {
    'pins' : pins,
    
    'slider1': slider1,
    'slider2': slider2
    
    }
    return render_template('main.html', **templateData)
@app.route("/fan2", methods=["POST"])
def fan2():
    
    global slider1
    global slider2
    slider2 = request.form["slider2"]
    mqttc.publish("Fan2",str(slider2))
    
    templateData = {
    'pins' : pins,
    
    'slider1': slider1,
    'slider2': slider2
    
    }
    return render_template('main.html', **templateData)
if __name__ == "__main__":
   mqttc=mqtt.Client()
   mqttc.connect("localhost",1883,60)
   mqttc.loop_start()
   app.run(host='0.0.0.0', port=8181, debug=True)
